<Activity mc:Ignorable="sap sap2010" x:Class="Generate_Test_Report" this:Generate_Test_Report.ContinueOnException="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Output report type. Valid values are &quot;excel&quot;, &quot;html&quot;" Name="ReportType" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="GeneratedReportPath" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Orchestrator folder path where the test set is executed" Name="OrchestratorFolderPath" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Folder path where the output file needs to be written.&#xA;Automation will write the output file to &lt;projectDir&gt;\Data\Output if this argument is left empty" Name="OutputFolder" Type="InArgument(x:String)" />
    <x:Property Name="ContinueOnException" Type="InArgument(x:Boolean)" />
    <x:Property Name="TotalTestCases" Type="OutArgument(x:Int32)" />
    <x:Property Name="TestCasesPassed" Type="OutArgument(x:Int32)" />
    <x:Property Name="TestCasesFailed" Type="OutArgument(x:Int32)" />
    <x:Property Name="TestCasesCancelled" Type="OutArgument(x:Int32)" />
    <x:Property Name="OverallStatus" Type="OutArgument(x:String)" />
    <x:Property Name="TestSetName" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1024,1988</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Used to generate Test execution report once the test set execution completes.&#xD;&#xA;&#xD;&#xA;Prerequisites:&#xD;&#xA;Test set execution should be triggered using Orchestrator or Test Manager. This component will not work while running/debugging test cases using Studio.&#xD;&#xA;&#xD;&#xA;Input Arguments:&#xD;&#xA;- ReportType (Mandatory) - Valid values are 'excel' or 'html'&#xD;&#xA;- OrchestratorFolderPath (Mandatory) - Orchestrator folder under which the test set is executed&#xD;&#xA;- OutputFolder (optional) - Folder path to save the output file. Make sure the given folder path is reachable from Testing robot&#xD;&#xA;- ContinueOnException (optional) - Recommended to set the value to True to supress any errors in this component. Otheriwse, test cases will be incorrectly marked as Failed for any errors raised in this component.&#xD;&#xA;&#xD;&#xA;Output Arguments:&#xD;&#xA;- GeneratedReportPath - Path to the generated output file&#xD;&#xA;&#xD;&#xA;The below arguments can be used to include high level test set execution statistics in the email subject/body.&#xD;&#xA;- TotalTestCases - Total number of test cases executed&#xD;&#xA;- TestCasesPassed - Number of passed test cases&#xD;&#xA;- TestCasesFailed - Number of failed test cases in this run&#xD;&#xA;- TestCasesCancelled - Number of cancelled test cases&#xD;&#xA;- OverallStatus - Overall status of the test set&#xD;&#xA;- TestSetName - Name of the test set" DisplayName="Generate Test Report" sap:VirtualizedContainerService.HintSize="1034,1923" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch - Generate Test Report" sap:VirtualizedContainerService.HintSize="972,1449" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Flowchart sap2010:Annotation.AnnotationText="Check if the execution reached the last test case. If so then generate the report based on the report type selected" DisplayName="Check and Generate test report" sap:VirtualizedContainerService.HintSize="934,1216" sap2010:WorkflowViewState.IdRef="Flowchart_1">
          <Flowchart.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="boolExecutionComplete" />
            <Variable x:TypeArguments="x:String" Name="strTestSetName" />
            <Variable x:TypeArguments="x:String" Name="strTestSetID" />
            <Variable x:TypeArguments="s:DateTime" Name="dtmTestSetStart" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtTestStatus" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtAssertionStatus" />
            <Variable x:TypeArguments="s:DateTime" Name="dtmEndTime" />
            <Variable x:TypeArguments="x:TimeSpan" Name="tspnTotalRuntime" />
            <Variable x:TypeArguments="x:String" Name="strOverallStatus" />
          </Flowchart.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">570,2.5</av:Point>
              <av:Size x:Key="ShapeSize">60,75</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">600,77.5 600,134</av:PointCollection>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Double x:Key="Height">1147.5290544671559</x:Double>
              <x:Double x:Key="Width">900.38444732213293</x:Double>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID12</x:Reference>
          </Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">500,134</av:Point>
                <av:Size x:Key="ShapeSize">200,97</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">600,231 600,276.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Check if execution reached the last (i.e. current) test case" DisplayName="Automations\\API_Check_If_Test_Set_Execution_Completed.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Automations\\API_Check_If_Test_Set_Execution_Completed.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_StrFolderName">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">OrchestratorFolderPath</mca:CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_BoolTestSetExecutionComplete">
                  <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">boolExecutionComplete</mca:CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_StrTestSetName">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">strTestSetName</mca:CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_StrTestSetID">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">strTestSetID</mca:CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="s:DateTime" x:Key="out_DtmTestSetStart">
                  <mca:CSharpReference x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">dtmTestSetStart</mca:CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="s:DateTime" x:Key="out_DtmTestSetEnd">
                  <mca:CSharpReference x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">dtmEndTime</mca:CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID0" DisplayName="Last test?" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                <FlowDecision.Condition>
                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">boolExecutionComplete</mca:CSharpValue>
                </FlowDecision.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">565,276.5</av:Point>
                    <av:Size x:Key="ShapeSize">70,87</av:Size>
                    <av:PointCollection x:Key="TrueConnector">565,320 430,320 430,354</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">330,354</av:Point>
                        <av:Size x:Key="ShapeSize">200,84</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">430,438 430,476.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Extract the test results" DisplayName="Automations\\Extract_Test_Results.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Automations\\Extract_Test_Results.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_StrFolderPath">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">OrchestratorFolderPath</mca:CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_StrTestSetID">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">strTestSetID</mca:CSharpValue>
                        </InArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DtTestStatus">
                          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">dtTestStatus</mca:CSharpReference>
                        </OutArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtAssertionStatus">
                          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">dtAssertionStatus</mca:CSharpReference>
                        </OutArgument>
                        <InOutArgument x:TypeArguments="s:DateTime" x:Key="io_DtmEndTime">
                          <mca:CSharpReference x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">dtmEndTime</mca:CSharpReference>
                        </InOutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID4" DisplayName="Tests exist?" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                        <FlowDecision.Condition>
                          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">dtTestStatus.Rows.Count &gt; 0</mca:CSharpValue>
                        </FlowDecision.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <av:Point x:Key="ShapeLocation">395,476.5</av:Point>
                            <av:Size x:Key="ShapeSize">70,87</av:Size>
                            <av:PointCollection x:Key="FalseConnector">465,520 620,520 620,563.5</av:PointCollection>
                            <av:PointCollection x:Key="TrueConnector">395,520 290,520 290,558.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">190,558.5</av:Point>
                                <av:Size x:Key="ShapeSize">200,127</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">290,685.5 290,716.5</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="Calculate Overall Stats and Output Test Set stats" DisplayName="Calculate Overall Status and total runtime" sap:VirtualizedContainerService.HintSize="200,127" sap2010:WorkflowViewState.IdRef="Sequence_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Calculate Overall Execution Time" sap:VirtualizedContainerService.HintSize="431,61" sap2010:WorkflowViewState.IdRef="Assign_1">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:TimeSpan">
                                    <mca:CSharpReference x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">tspnTotalRuntime</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:TimeSpan">
                                    <mca:CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">dtmEndTime - dtmTestSetStart</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <If DisplayName="If All tests Passed" sap:VirtualizedContainerService.HintSize="431,25" sap2010:WorkflowViewState.IdRef="If_1">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">dtTestStatus.Select("[Status] LIKE 'Passed'").Count() == dtTestStatus.Rows.Count</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Assign DisplayName="Assign Overall Status to Passed" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">strOverallStatus</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Passed</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <If DisplayName="If All tests cancelled" sap:VirtualizedContainerService.HintSize="569,220" sap2010:WorkflowViewState.IdRef="If_2">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">dtTestStatus.Select("[Status] LIKE 'Cancelled'").Count() == dtTestStatus.Rows.Count</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign DisplayName="Assign Overall Status to Cancelled" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_3">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">strOverallStatus</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Cancelled</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                    <If.Else>
                                      <Assign DisplayName="Assign Overall Status to Failed" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_4">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">strOverallStatus</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Failed</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                </If.Else>
                              </If>
                              <ui:MultipleAssign DisplayName="Output Test Execution Stats" sap:VirtualizedContainerService.HintSize="431,256" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">TotalTestCases</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">dtTestStatus.Rows.Count</mca:CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">TestCasesPassed</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">dtTestStatus.Select("[Status] LIKE 'Passed'").Count()</mca:CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">TestCasesFailed</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">dtTestStatus.Select("[Status] LIKE 'Failed'").Count()</mca:CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">TestCasesCancelled</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">dtTestStatus.Select("[Status] LIKE 'Cancelled'").Count()</mca:CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">OverallStatus</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">strOverallStatus</mca:CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">TestSetName</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">strTestSetName</mca:CSharpValue>
                                        </InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                              </ui:MultipleAssign>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID1" DisplayName="Excel Report" sap:VirtualizedContainerService.HintSize="71,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                <FlowDecision.Condition>
                                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">ReportType.ToLower().Contains("excel")</mca:CSharpValue>
                                </FlowDecision.Condition>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <av:Point x:Key="ShapeLocation">254.5,716.5</av:Point>
                                    <av:Size x:Key="ShapeSize">71,87</av:Size>
                                    <av:PointCollection x:Key="FalseConnector">325.5,760 460,760 460,796.5</av:PointCollection>
                                    <av:PointCollection x:Key="TrueConnector">254.5,760 100,760 100,803.5</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <FlowDecision.True>
                                  <FlowStep x:Name="__ReferenceID8">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <av:Point x:Key="ShapeLocation">0,803.5</av:Point>
                                        <av:Size x:Key="ShapeSize">200,97</av:Size>
                                        <av:PointCollection x:Key="ConnectorLocation">100,900.5 100,950.5</av:PointCollection>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Copy template file to the output directory" DisplayName="Automations\\Copy_Template_File.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Automations\\Copy_Template_File.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrTemplateFilePath">
                                          <Literal x:TypeArguments="x:String">Templates\\ExcelTemplate.xlsx</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrOutputFolder">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">OutputFolder</mca:CSharpValue>
                                        </InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_StrOutputFileName">
                                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">GeneratedReportPath</mca:CSharpReference>
                                        </OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrTestSetName">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">strTestSetName</mca:CSharpValue>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID9">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">0,950.5</av:Point>
                                            <av:Size x:Key="ShapeSize">200,53</av:Size>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Automations\\Generate_Excel_Report.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Automations\\Generate_Excel_Report.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrReportPath">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">GeneratedReportPath</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="s:DateTime" x:Key="in_DtmStartTime">
                                              <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">dtmTestSetStart</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="s:DateTime" x:Key="in_DtmEndTime">
                                              <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">dtmEndTime</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_TspnTotalExecutionTime">
                                              <mca:CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">tspnTotalRuntime</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrOverallStatus">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">strOverallStatus</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_DtTestCaseStats">
                                              <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">dtTestStatus</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_DtAssertionStats">
                                              <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">dtAssertionStatus</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrTestSetName">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">strTestSetName</mca:CSharpValue>
                                            </InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeWorkflowFile>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.True>
                                <FlowDecision.False>
                                  <FlowDecision x:Name="__ReferenceID6" DisplayName="HTML Report" sap:VirtualizedContainerService.HintSize="76,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                    <FlowDecision.Condition>
                                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">ReportType.ToLower().Contains("html")</mca:CSharpValue>
                                    </FlowDecision.Condition>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <av:Point x:Key="ShapeLocation">422,796.5</av:Point>
                                        <av:Size x:Key="ShapeSize">76,87</av:Size>
                                        <av:PointCollection x:Key="FalseConnector">498,840 660,840 660,863.5</av:PointCollection>
                                        <av:PointCollection x:Key="TrueConnector">422,840 350,840 350,901.5</av:PointCollection>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <FlowDecision.True>
                                      <FlowStep x:Name="__ReferenceID10">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">250,901.5</av:Point>
                                            <av:Size x:Key="ShapeSize">200,97</av:Size>
                                            <av:PointCollection x:Key="ConnectorLocation">350,998.5 350,1048.5</av:PointCollection>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Copy html template file to the output directory" DisplayName="Automations\\Copy_Template_File.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Automations\\Copy_Template_File.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrTemplateFilePath">
                                              <Literal x:TypeArguments="x:String">Templates\\HTMLTemplate.html</Literal>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrOutputFolder">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">OutputFolder</mca:CSharpValue>
                                            </InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_StrOutputFileName">
                                              <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">GeneratedReportPath</mca:CSharpReference>
                                            </OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_StrTestSetName">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">strTestSetName</mca:CSharpValue>
                                            </InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeWorkflowFile>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID11">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <av:Point x:Key="ShapeLocation">250,1048.5</av:Point>
                                                <av:Size x:Key="ShapeSize">200,53</av:Size>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Automations\\Generate_HTML_Report.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Automations\\Generate_HTML_Report.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrReportPath">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">GeneratedReportPath</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="s:DateTime" x:Key="in_DtmStartTime">
                                                  <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">dtmTestSetStart</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="s:DateTime" x:Key="in_DtmEndTime">
                                                  <mca:CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">dtmEndTime</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_TspnTotalExecutionTime">
                                                  <mca:CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">tspnTotalRuntime</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrOverallStatus">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">strOverallStatus</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_DtTestCaseStats">
                                                  <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">dtTestStatus</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_DtAssertionStats">
                                                  <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">dtAssertionStatus</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrTestSetName">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">strTestSetName</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_StrOrchFolderPath">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">OrchestratorFolderPath</mca:CSharpValue>
                                                </InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeWorkflowFile>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.True>
                                    <FlowDecision.False>
                                      <FlowStep x:Name="__ReferenceID7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">560,863.5</av:Point>
                                            <av:Size x:Key="ShapeSize">200,53</av:Size>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message - Unsupported report" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">String.Format("Supplied report type {0} is not supported. Valud values are 'excel' or 'html'.", ReportType)</mca:CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                      </FlowStep>
                                    </FlowDecision.False>
                                  </FlowDecision>
                                </FlowDecision.False>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">520,563.5</av:Point>
                                <av:Size x:Key="ShapeSize">200,53</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message - No test result found" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn">
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">"No test case execution found for the test set"</mca:CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID5</x:Reference>
          <x:Reference>__ReferenceID6</x:Reference>
          <x:Reference>__ReferenceID7</x:Reference>
          <x:Reference>__ReferenceID8</x:Reference>
          <x:Reference>__ReferenceID9</x:Reference>
          <x:Reference>__ReferenceID10</x:Reference>
          <x:Reference>__ReferenceID11</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="938,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <If DisplayName="If - Continue on exception" sap:VirtualizedContainerService.HintSize="579,251" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">ContinueOnException</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <ui:LogMessage DisplayName="Log Message - exception" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">exception.Message</mca:CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                </ui:LogMessage>
              </If.Then>
              <If.Else>
                <Rethrow sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
              </If.Else>
            </If>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>