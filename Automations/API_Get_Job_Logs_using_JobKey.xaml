<Activity mc:Ignorable="sap sap2010" x:Class="API_Get_Job_Logs_using_JobKey" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:sc1="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_StrJobKey" Type="InArgument(x:String)" />
    <x:Property Name="in_StrFolderName" Type="InArgument(x:String)" />
    <x:Property Name="out_StrJobLogs" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>885,2096</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="60">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Get the logs for the test case to add it in the output report.&#xA;Only the below log level are outputted&#xA;- Info&#xA;- Warning&#xA;- Error&#xA;- Fatal" DisplayName="API_Get_Job_Logs_using_JobKey" sap:VirtualizedContainerService.HintSize="711,2031" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Initialise output message" sap:VirtualizedContainerService.HintSize="649,61" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">out_StrJobLogs</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch - Extract Job Log" sap:VirtualizedContainerService.HintSize="649,1717" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Name="strJobLogEndpoint" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence DisplayName="Extract Job Logs" sap:VirtualizedContainerService.HintSize="611,1489" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strJobLogs" />
            <Variable x:TypeArguments="njl:JObject" Name="jobjJobLogs" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Generate Job Log API Endpoint" sap:VirtualizedContainerService.HintSize="549,61" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">strJobLogEndpoint</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">String.Format("/odata/RobotLogs?%24filter=JobKey%20eq%20{0}&amp;%24orderby=TimeStamp%20asc", in_StrJobKey)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Job Logs from Orchestrator" sap:VirtualizedContainerService.HintSize="549,25" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_1" Method="GET">
            <ui:OrchestratorHttpRequest.FolderPath>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">in_StrFolderName</mca:CSharpValue>
              </InArgument>
            </ui:OrchestratorHttpRequest.FolderPath>
            <ui:OrchestratorHttpRequest.RelativeEndpoint>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">strJobLogEndpoint</mca:CSharpValue>
              </InArgument>
            </ui:OrchestratorHttpRequest.RelativeEndpoint>
            <ui:OrchestratorHttpRequest.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">strJobLogs</mca:CSharpReference>
              </OutArgument>
            </ui:OrchestratorHttpRequest.Result>
          </ui:OrchestratorHttpRequest>
          <Assign DisplayName="Convert Job Logs to JObject" sap:VirtualizedContainerService.HintSize="549,61" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="njl:JObject">
                <mca:CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">jobjJobLogs</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="njl:JObject">
                <mca:CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">JObject.Parse(strJobLogs)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" DisplayName="For Each - Job Log" sap:VirtualizedContainerService.HintSize="549,1111" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="njl:JObject">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="njl:JObject" Name="jobLog" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Extract Job Logs" sap:VirtualizedContainerService.HintSize="513,986" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:IfElseIf sap2010:Annotation.AnnotationText="Override the alert level by changing the alert-* class in the output message.&#xA;&#xA;Refer the below link for all valid alert-* class values&#xA;https://getbootstrap.com/docs/5.0/components/alerts/" DisplayName="Add to output based on log type" sap:VirtualizedContainerService.HintSize="451,875" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If">
                          <ui:IfElseIfBlock.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34" xml:space="preserve">jobLog["Level"].ToString().Equals("Info") 
	&amp;&amp; jobLog["Message"].ToString().Contains("Assert logged to test case execution in Orchestrator") == false 
	&amp;&amp; jobLog["Message"].ToString().EndsWith("execution started") == false 
	&amp;&amp; jobLog["Message"].ToString().EndsWith("execution ended") == false
	&amp;&amp; jobLog["Message"].ToString().Contains("Audit: ") == false</mca:CSharpValue>
                            </InArgument>
                          </ui:IfElseIfBlock.Condition>
                          <ui:IfElseIfBlock.Then>
                            <Assign DisplayName="Assign - Success Message" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">out_StrJobLogs</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31" xml:space="preserve">out_StrJobLogs + String.Format("&lt;div class=\"alert alert-success\" role=\"alert\"&gt;{0}: {1}&lt;/div&gt;", DateTime.Parse(jobLog["TimeStamp"].ToString(), null, System.Globalization.DateTimeStyles.RoundtripKind).ToString("dd-MMM-yyyy HH:mm:ss tt"),  jobLog["Message"].ToString())</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                        <ui:IfElseIfBlock BlockType="ElseIf">
                          <ui:IfElseIfBlock.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">jobLog["Level"].ToString().Equals("Warn")</mca:CSharpValue>
                            </InArgument>
                          </ui:IfElseIfBlock.Condition>
                          <ui:IfElseIfBlock.Then>
                            <Assign DisplayName="Assign - Warning Message" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">out_StrJobLogs</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32" xml:space="preserve">out_StrJobLogs + String.Format("&lt;div class=\"alert alert-warning\" role=\"alert\"&gt;{0}: {1}&lt;/div&gt;", DateTime.Parse(jobLog["TimeStamp"].ToString(), null, System.Globalization.DateTimeStyles.RoundtripKind).ToString("dd-MMM-yyyy HH:mm:ss tt"),  jobLog["Message"].ToString())</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                        <ui:IfElseIfBlock BlockType="ElseIf">
                          <ui:IfElseIfBlock.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">jobLog["Level"].ToString().Equals("Error") || jobLog["Level"].ToString().Equals("Fatal")</mca:CSharpValue>
                            </InArgument>
                          </ui:IfElseIfBlock.Condition>
                          <ui:IfElseIfBlock.Then>
                            <Assign DisplayName="Assign - Danger Message" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_6">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">out_StrJobLogs</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33" xml:space="preserve">out_StrJobLogs + String.Format("&lt;div class=\"alert alert-danger\" role=\"alert\"&gt;{0}: {1}&lt;/div&gt;", DateTime.Parse(jobLog["TimeStamp"].ToString(), null, System.Globalization.DateTimeStyles.RoundtripKind).ToString("dd-MMM-yyyy HH:mm:ss tt"),  jobLog["Message"].ToString())</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                        <ui:IfElseIfBlock BlockType="ElseIf">
                          <ui:IfElseIfBlock.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">jobLog["Level"].ToString().Equals("Info") &amp;&amp; ( jobLog["Message"].ToString().EndsWith("execution started") || jobLog["Message"].ToString().EndsWith("execution ended") )</mca:CSharpValue>
                            </InArgument>
                          </ui:IfElseIfBlock.Condition>
                          <ui:IfElseIfBlock.Then>
                            <Assign DisplayName="Assign - Info Message" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_7">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">out_StrJobLogs</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30" xml:space="preserve">out_StrJobLogs + String.Format("&lt;div class=\"alert alert-secondary\" role=\"alert\"&gt;{0}: {1}&lt;/div&gt;", DateTime.Parse(jobLog["TimeStamp"].ToString(), null, System.Globalization.DateTimeStyles.RoundtripKind).ToString("dd-MMM-yyyy HH:mm:ss tt"),  jobLog["Message"].ToString())</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:IfElseIf>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <ui:ForEach.Values>
              <InArgument x:TypeArguments="sc1:IEnumerable">
                <mca:CSharpValue x:TypeArguments="sc1:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">jobjJobLogs["value"]</mca:CSharpValue>
              </InArgument>
            </ui:ForEach.Values>
          </ui:ForEach>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="615,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message - Job logs extraction exception" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">String.Format("Below exception occurred while trying to extract job logs for JobKey: {0} \n{1}"+ in_StrJobKey, exception.Message)</mca:CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>